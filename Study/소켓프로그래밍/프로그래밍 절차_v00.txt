
- TCP Client
 1) 소켓을 생성한다.
 2) 서버로 connect한다.
 3) 접속이 성공됐다면 read 및 write 함수를 통해 서버와 패킷을 주고 받는다.
 4) 사용을 마치면 close로 소켓을 닫는다.


- TCP server
 1) 듣기 소켓을 생성한다.
 2) bind한다. (내선 부여)
 3) listen한다. (내선 연결)
 4) accept() 클라이언트가 connect할 경우 소켓을 생성 하고 연결한다. //특정 accept 핸들에 맞는 클라가 있으면
 5) read와 write 함수를 이용해 메시지를 주고 받는다.
 6) 사용된 연결 소켓을 닫는다.
 7) 사용을 마쳤을 경우 듣기 소켓을 닫는다.
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
-파일 송신 과정
 1)argument로 입력한 파일을 읽기전용으로 open한다.
 2)파일의 이름을 얻고,서버로 전송한다.
 3)파일의 크기를 구한 뒤, 서버로 전송한다.
 4)buf의 크기만큼 파일로부터 내용을 읽어온 뒤, 서버로 전송한다.
 5) 4)의 과정을 파일의 크기만큼 반복해준다.
 6) open한 file을 close해준다.

-파일 수신 과정
 1)client로 파일의 이름과 크기를 받는다.
 2) 1)의 정보로 파일을 쓰기전용으로 open한다.
 3)buf의 크기만큼 전송받은 내용을 파일에 쓴다.
 4) 3)의 과정을 파일의 크기만큼 될 때까지 반복한다.
 5)open한 file을 close해준다.
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
2.서버와 클라이언트의 연결 과정

-서버

1)client와 connection 전용 socket하나를 만들어 주어 사용할 프로토콜을 결정한다.
	socket listen_sock = socket(AF_INET,SOCK_STREAM,0);
2)bind()함수를 통한 지역IP주소와 지역 포트번호를 결정한다.client와 다르게 bind()함수가 필요한 이유는 서버의 ip주소와 포트번호는 정적으로 고정되어 있어야 client가 알 수 있어 접속이 가능하기 때문이다.

3)listen()함수로 TCP를 LISTENING 상태로 변경한다.
	listen(listen_sock,SOMAXCONN);
4)client와 connection(3way handshake)을 맺은 이후 데이터를 송수신할 소켓을 accept()함수를 이용한다. 이때 원격IP주소와 원격 포트번호가 결정된다.
	SOCKET client_sock;
	client_sock = accept(listen_sock,(SCOKADDR*)&clientaddr,&addrlen);
5)데이터를 send()와 recv()함수를 통해 송수신한다.(위의 파일 송수신 과정)
6)closesocket()함수로 socket을 닫아준다 만약 닫지 않는다면 자원이 할당 된 채 남아 있지않으므로 어느 순간엔 더 이상 socket을 생성하지 못하게 된다.
	closesocket(listen_sock);

-클라이언트
1)socket()함수로 소켓을 생성하고, 사용할 프로토콜을 결정합니다.
	SOCKET sock = socket(AF_INET,SOCK_STREAM,0);
2)connect()함수의 역할은 서버와의 논리적인 연결로 3-way-handshake를 수행한다.connect()함수로 서버에 접속한 뒤, 원격IP주소와 원격 포트번호는 물론,지역 IP주소와 지역포트번호도결정된다.여기서 클라이언트는 서버와 다르게 bind()함수를 호출하지 않는다. 운영체제가 자동으로 지역IP주소와 지역 포트번호를 할당해준다.
	connect(sock,(SOCKADDR*)&serveraddr,sizeof(serveraddr));
3)데이터를 send()와 recv()함수를 통해 송수신한다.(위의 파일 송수신 과정)

4)server와 같은 이유로 마지막에는 closesocket()로 생성한 소켓을 닫아준다.
