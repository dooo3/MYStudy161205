목적 : 소켓 서버/클라이언트 제작하여 OS이론, 소켓통신, 그외TIP 이해, C/C++실력향상.
방식 : 요구사항에 맞게끔만 심플하게 제작후 컨펌. 그리고 다시 수정

1. TCP 소켓서버/클라이언트 제작(1)
 1.1 서버 동작방식
 - TCP/IP 프로토콜 사용.
 - 포트는 9000번 사용.
 - 콘솔로 개발.
 - 스레드 2개로 동작.( 스레드 1개 추가생성 )
   ㄴ주스레드 : 소켓초기화와 스레드 1개추가생성 그리고 클라이언트 연결요청만 받기
   ㄴ서브스레드 : 클라이언트 패킷받기( recv 사용 )
 - 클라이언트에게 채팅패킷을 받으면 채팅내용 printf문 찍기

 1.2 클라이언트 동작방식
 - TCP/IP 프로토콜 사용.
 - 문자타이핑후 엔터치면 서버로 전송.

 1.3 공통
 - 개발도구 : 비쥬얼스튜디오
 - 개발언어 : C/C++
 - 패킷형태(클라->서버) : 채팅관련패킷제작한다고 생각하고 제작.

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

클라이언트에서 100번 보낸것을 

100번 정확히 받아내기

(정답은 없다)

패킷을 보낼때 길이정보도 보내서 받을때 정확히 받기
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#######################################header에 lenght붙일때 팁
int nTmpIndex = 0;
nTmpIndex = index;                //header의 lenght의 인덱스를 저장해놓는다 그럼 밑에서 저장해도 상관없음
//memcpy(sendBuf+index,&PACKET_LENGHT,sizeof(int));
index += sizeof(int);


		//----------------------------------------데이터
		sendBuf[index++] = CS_CHAT_MSG_NTY;
		PACKET_LENGHT++;

		memcpy(sendBuf+index,szID,MAX_ID);
		index += MAX_ID;
		PACKET_LENGHT += MAX_ID;

		memcpy(sendBuf+index,szMsg,MAX_MSG);
		index += MAX_MSG;
		PACKET_LENGHT += MAX_MSG;
		//----------------------------------------데이터
//실제 데이터의 LENGHT를 저장한다.

//저장해 놓았던 header의 lenght인덱스를 가져와서 header에 붙인다
memcpy(sendBuf+nTmpIndex,&PACKET_LENGHT,sizeof(int));
