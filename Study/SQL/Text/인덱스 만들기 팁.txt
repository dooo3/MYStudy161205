
http://lng1982.tistory.com/144 참조 사이트





[선택도]
선택도라함은 테이블의 전체 데이터 집합 중에 특정 조건에 의해 데이터가 걸러지는 비율을 얘기한다.
여기서 클러스터드 인덱스는 테이블의 데이터가 물리적으로 정렬되어 저장되어 있기 때문에 부분 범위 
처리에 활용하면 적은 I/O를 통해 원하는 데이터를 추출할 수 있다.
예를 들어서 7, 8, 9의 데이터를 추출한다고 했을 때 클러스터드 인덱스는 단 한 번의 I/O를 통해서 
데이터를 추출할 수 있다. 왜냐하면 7, 8, 9는 3번 데이터 페이지에 모두 존재하기 때문이다.

넌 클러스터드 인덱스는 leaf level 인덱스 페이지에 테이블 데이터의 위치가 저장되어 
있기 때문에 테이블 데이터로 직접 access가 가능하다.
위의 예에서 설명한 것과 같이 넌 클러스터드 인덱스에서 7, 8, 9의 데이터를 추출하게 된다면 
2번의 I/O가 발생한다. 

왜냐하면 7값은 2번 데이터 페이지에 존재하고 8, 9는 3번 데이터 페이지에 존재하기 때문이다.

그래서 넌 클러스터드 인덱스는 선택도의 범위가 3% 이내일 때 효율적이다.

[최대 갯수]
클러스터드 인덱스는 물리적으로 정렬되어 있는 상태로 데이터가 저장되기 때문에 딱 1개만 생성 가능하다. 
만약 2개의 클러스터드 인덱스가 생성된다면 데이터 정렬이 꼬이기 때문에 딱 한 개만 생성할 수 있는 것이다. 
이에 반해 넌 클러스터드 인덱스는 인덱스 테이블을 별도로 생성하여 데이터를 정렬하기에  
충분히(249개) 생성할 수 있다.


인덱스를 사용하면 유용한 부분은?
(인덱스 데이터는 order by문을 사용하지 않더라도 정렬된 순서로 되어있음)

5-1. WHERE절에서 참조되는 컬럼

5-2. 참조키가 설정되어 있는 컬럼

5-3. 참조키는 아니지만 JOIN에 사용되는 컬럼

5-4. 범위 검색이 일어나는 컬럼

5-5. ORDER BY로 정렬 되는 컬럼, GROUP BY로 그룹핑 되는 컬럼

5-6. TOP 구문과 함께 사용되는 SELECT 절


그렇다면? 어디에 사용하면 바보 될까요?

5-7. WHERE절에서 사용되지 않는 컬럼에는 물론 효과 없음.

5-9. WHERE절에서 변환(함수등이 사용되는)되는 컬럼과 비교시 효과 없음.

5-10. 선택도(찾을 데이터 / 전체 데이터)가 클 경우 효과 적음.

예를 들어 성별 컬럼과 같은 남 / 여 비율적으로 대략 50 : 50 의 구성비가 있는 컬럼이라면?

 인덱스의 효과가 떨어지겠죠.

이런 주의 사항이 필요합니다.


클러스터 색인은 테이블마다 하나 밖에 존재할 수 없으며, 속도에도 많은 영향을 미치는 요소이므로

기본 키를 무조건 클러스터 색인으로 설정하는 것은 옳지 않다.

일반적으로는 정렬(sort)되어 있어야 더 좋은 속도를 낼 수 있는 컬럼을 클러스터 색인으로 만드는 것이 가장 좋다.



예를 들어 사원 번호가 기본 키이며 CL인 경우를 흔히 보게 되는데, 업무 상 사원 번호를 "10번부터 100번까지"

라는 식으로 범위를 주어 찾을 때가 얼마나 많을까? 그 보다는 오히려 이름순으로 성이 "김"씨인 사람을 찾을

때나 ,부서가 "영업"인 사람을 찾을 때가 더 많을 것이다.

그렇다면 오히려 이름이나 부서에 대해 클러스터 색인을 설정하는 것이 옳다.

앞서 말한 대로 이것은 전적으로 업무의 성격에 따라 얼마든지 달라질 수 있다. 

여러분 회사의 클러스터 색인을 다시 한번 점검해 보자.

결론적으로, 클러스터 색인은 한 테이블에 하나만 존재할 수 있으며, 범위를 주고 값을 찾을때에 매우 도움이 된다.

흔히 Primary Key는 무조건 클러스터 색인을 만드는데 이것은 옳지 않다.

반드시 색인을 만들기 전과 후의 속도를 비교해 보고 결정해야 한다.